openapi: 3.1.0
info:
  title: Plant Database API - Minimal Test
  description: Ultra-minimal schema to test POST functionality
  version: 1.0.0
servers:
  - url: https://dev-plant-database-api.onrender.com
    description: Development server

paths:
  /api/health:
    get:
      operationId: testHealthGet
      summary: Test GET endpoint
      description: Working GET endpoint for comparison
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string

  /api/test/minimal-post:
    post:
      operationId: testMinimalPost
      summary: Test POST endpoint
      description: Ultra-minimal POST test
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dummy:
                  type: string
                  description: Dummy field to satisfy requestBody requirement
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /api/test/super-open-post:
    post:
      operationId: testSuperOpenPost
      summary: Super open POST endpoint
      description: Completely permissive POST endpoint for debugging ChatGPT issues
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                anything:
                  type: string
                  description: Accepts any data for debugging
              additionalProperties: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  timestamp:
                    type: string
                  received_data:
                    oneOf:
                      - type: object
                      - type: string
                      - type: 'null'
                  data_source:
                    type: string
                  request_info:
                    type: object
                    properties:
                      method:
                        type: string
                      user_agent:
                        type: string
                      content_type:
                        type: string
                      origin:
                        type: string